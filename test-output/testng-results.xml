<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="12" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-15T15:32:25 EDT" name="Suite" finished-at="2023-07-15T15:33:37 EDT" duration-ms="71160">
    <groups>
    </groups>
    <test started-at="2023-07-15T15:32:25 EDT" name="Test" finished-at="2023-07-15T15:33:37 EDT" duration-ms="71160">
      <class name="com.naveenautomationlabs.AFramework.tests.MyWishListTest">
        <test-method is-config="true" signature="setUpLogger()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.MyWishListTest@194bcebf]" started-at="2023-07-15T15:33:24 EDT" name="setUpLogger" finished-at="2023-07-15T15:33:24 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpLogger -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.MyWishListTest@194bcebf]" started-at="2023-07-15T15:33:24 EDT" name="setUp" finished-at="2023-07-15T15:33:28 EDT" duration-ms="3807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateGettingCellElementFromTable()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.MyWishListTest@194bcebf]" started-at="2023-07-15T15:33:28 EDT" name="validateGettingCellElementFromTable" finished-at="2023-07-15T15:33:30 EDT" duration-ms="2310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGettingCellElementFromTable -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.MyWishListTest@194bcebf]" started-at="2023-07-15T15:33:30 EDT" name="setUp" finished-at="2023-07-15T15:33:34 EDT" duration-ms="3990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLogin()[pri:1, instance:com.naveenautomationlabs.AFramework.tests.MyWishListTest@194bcebf]" started-at="2023-07-15T15:33:34 EDT" name="validateLogin" finished-at="2023-07-15T15:33:37 EDT" duration-ms="2245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLogin -->
      </class> <!-- com.naveenautomationlabs.AFramework.tests.MyWishListTest -->
      <class name="com.naveenautomationlabs.AFramework.tests.YourStoreTest">
        <test-method is-config="true" signature="setUpLogger()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:26 EDT" name="setUpLogger" finished-at="2023-07-15T15:32:26 EDT" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpLogger -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:26 EDT" name="setUp" finished-at="2023-07-15T15:32:30 EDT" duration-ms="4501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateClickingDisplayItemOnMainPageTakesToItemPage()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:30 EDT" name="validateClickingDisplayItemOnMainPageTakesToItemPage" finished-at="2023-07-15T15:32:33 EDT" duration-ms="3094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateClickingDisplayItemOnMainPageTakesToItemPage -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:33 EDT" name="quit" finished-at="2023-07-15T15:32:33 EDT" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:33 EDT" name="setUp" finished-at="2023-07-15T15:32:37 EDT" duration-ms="3693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateDisplayImageIsMovingOnMainPage()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:37 EDT" name="validateDisplayImageIsMovingOnMainPage" finished-at="2023-07-15T15:32:40 EDT" duration-ms="3079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisplayImageIsMovingOnMainPage -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:40 EDT" name="quit" finished-at="2023-07-15T15:32:40 EDT" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:40 EDT" name="setUp" finished-at="2023-07-15T15:32:44 EDT" duration-ms="3729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="validateFailedTest()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:44 EDT" name="validateFailedTest" finished-at="2023-07-15T15:32:44 EDT" duration-ms="2" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at com.naveenautomationlabs.AFramework.tests.YourStoreTest.validateFailedTest(YourStoreTest.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFailedTest -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:44 EDT" name="quit" finished-at="2023-07-15T15:32:44 EDT" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:44 EDT" name="setUp" finished-at="2023-07-15T15:32:48 EDT" duration-ms="3754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateFailedTest()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:48 EDT" name="validateFailedTest" finished-at="2023-07-15T15:32:48 EDT" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at com.naveenautomationlabs.AFramework.tests.YourStoreTest.validateFailedTest(YourStoreTest.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFailedTest -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:48 EDT" name="quit" finished-at="2023-07-15T15:32:48 EDT" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:48 EDT" name="setUp" finished-at="2023-07-15T15:32:52 EDT" duration-ms="3890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateFooterDisplayImagesMoving()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:52 EDT" name="validateFooterDisplayImagesMoving" finished-at="2023-07-15T15:32:56 EDT" duration-ms="3263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFooterDisplayImagesMoving -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:56 EDT" name="quit" finished-at="2023-07-15T15:32:56 EDT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:32:56 EDT" name="setUp" finished-at="2023-07-15T15:33:00 EDT" duration-ms="3847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLoginUsingValidCredentials(java.lang.String,java.lang.String)[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:00 EDT" name="validateLoginUsingValidCredentials" data-provider="loginDataProvider" finished-at="2023-07-15T15:33:02 EDT" duration-ms="1592" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tony@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginUsingValidCredentials -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:02 EDT" name="quit" finished-at="2023-07-15T15:33:02 EDT" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:02 EDT" name="setUp" finished-at="2023-07-15T15:33:06 EDT" duration-ms="3902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLoginUsingValidCredentials(java.lang.String,java.lang.String)[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:06 EDT" name="validateLoginUsingValidCredentials" data-provider="loginDataProvider" finished-at="2023-07-15T15:33:07 EDT" duration-ms="1310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[manpreetkaur1991@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[manpreetkaur]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginUsingValidCredentials -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:07 EDT" name="quit" finished-at="2023-07-15T15:33:07 EDT" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:07 EDT" name="setUp" finished-at="2023-07-15T15:33:11 EDT" duration-ms="3626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLoginUsingValidCredentials(java.lang.String,java.lang.String)[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:11 EDT" name="validateLoginUsingValidCredentials" data-provider="loginDataProvider" finished-at="2023-07-15T15:33:12 EDT" duration-ms="1246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ryan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ChangePass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginUsingValidCredentials -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:12 EDT" name="quit" finished-at="2023-07-15T15:33:12 EDT" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:12 EDT" name="setUp" finished-at="2023-07-15T15:33:16 EDT" duration-ms="3749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLoginUsingValidCredentials(java.lang.String,java.lang.String)[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:16 EDT" name="validateLoginUsingValidCredentials" data-provider="loginDataProvider" finished-at="2023-07-15T15:33:17 EDT" duration-ms="1229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jainrajat1234@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[RAJATjain]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginUsingValidCredentials -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:17 EDT" name="quit" finished-at="2023-07-15T15:33:17 EDT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:17 EDT" name="setUp" finished-at="2023-07-15T15:33:21 EDT" duration-ms="3791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateWishListIsUpdated()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:21 EDT" name="validateWishListIsUpdated" finished-at="2023-07-15T15:33:24 EDT" duration-ms="3116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWishListIsUpdated -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.naveenautomationlabs.AFramework.tests.YourStoreTest@7c711375]" started-at="2023-07-15T15:33:24 EDT" name="quit" finished-at="2023-07-15T15:33:24 EDT" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.naveenautomationlabs.AFramework.tests.YourStoreTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
